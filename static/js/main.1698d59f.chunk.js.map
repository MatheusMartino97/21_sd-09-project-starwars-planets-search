{"version":3,"sources":["contexts/StarWarsContext.js","services/starWarsAPI.js","contexts/Provider.jsx","components/Inputs.jsx","components/Table.jsx","App.js","index.js"],"names":["StarWarsContext","createContext","fetchPlanets","a","fetch","request","json","results","Error","Provider","children","useState","data","setPlanets","filteredPlanets","setFilteredPlanets","name","number","column","comparison","filters","setFilters","setData","planets","useEffect","contextValue","changeNameToBeFiltered","value","target","filterPlanetsByName","filteredData","filter","includes","changeNumericInfoToBeFiltered","handleButtonFilterClick","planet","parseInt","clearFilters","Inputs","useContext","clearFiltersButton","type","onClick","data-testid","action","id","onChange","event","Table","map","key","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","films","created","edited","url","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1698d59f.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst StarWarsContext = createContext();\n\nexport default StarWarsContext;\n","const fetchPlanets = async () => {\n  try {\n    const endpoint = 'https://swapi-trybe.herokuapp.com/api/planets/';\n    const request = await fetch(endpoint);\n    const { results } = await request.json();\n\n    return results;\n  } catch (error) {\n    return Error(error);\n  }\n};\n\nexport default fetchPlanets;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport StarWarsContext from './StarWarsContext';\nimport fetchPlanets from '../services/starWarsAPI';\n\nfunction Provider({ children }) {\n  const [data, setPlanets] = useState([]);\n  const [filteredPlanets, setFilteredPlanets] = useState([]);\n  const [filters, setFilters] = useState({\n    name: '',\n    number: 0,\n    column: 'population',\n    comparison: 'maior que',\n  });\n\n  const setData = async () => {\n    const planets = await fetchPlanets();\n\n    setPlanets(planets);\n    setFilteredPlanets(planets);\n  };\n\n  const changeNameToBeFiltered = ({ target: { value } }) => {\n    setFilters({\n      ...filters,\n      name: value,\n    });\n  };\n\n  const changeNumericInfoToBeFiltered = ({ target: { name, value } }) => {\n    setFilters({\n      ...filters,\n      [name]: value,\n    });\n  };\n\n  const handleButtonFilterClick = () => {\n    const { number, column, comparison } = filters;\n\n    const filteredData = data.filter((planet) => {\n      if (comparison === 'maior que') {\n        return parseInt(planet[column], 10) > parseInt(number, 10);\n      }\n\n      if (comparison === 'menor que') {\n        return parseInt(planet[column], 10) < parseInt(number, 10);\n      }\n\n      return parseInt(planet[column], 10) === parseInt(number, 10);\n    });\n    setFilteredPlanets(filteredData);\n  };\n\n  useEffect(() => {\n    setData();\n  }, []);\n\n  // useEffect(() => {\n  //   const filteredData = data.filter(({ name }) => name.includes(filters.name));\n\n  //   setFilteredPlanets(filteredData);\n  // });\n\n  const filterPlanetsByName = ({ target: { value } }) => {\n    const filteredData = data.filter(({ name }) => name.includes(value));\n\n    setFilteredPlanets(filteredData);\n  };\n\n  const clearFilters = () => {\n    setFilters({\n      name: '',\n      number: 0,\n      column: 'population',\n      comparison: 'maior que',\n    });\n\n    setFilteredPlanets(data);\n  };\n\n  const contextValue = {\n    changeNameToBeFiltered,\n    filterPlanetsByName,\n    filteredPlanets,\n    changeNumericInfoToBeFiltered,\n    handleButtonFilterClick,\n    clearFilters,\n    filters,\n  };\n\n  return (\n    <StarWarsContext.Provider value={ contextValue }>\n      {children}\n    </StarWarsContext.Provider>\n  );\n}\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n","import React, { useContext } from 'react';\nimport StarWarsContext from '../contexts/StarWarsContext';\n\nfunction Inputs() {\n  const {\n    changeNameToBeFiltered,\n    filterPlanetsByName,\n    changeNumericInfoToBeFiltered,\n    handleButtonFilterClick,\n    filters,\n    clearFilters,\n  } = useContext(StarWarsContext);\n\n  const clearFiltersButton = (\n    <button type=\"button\" onClick={ clearFilters } data-testid=\"filter\">\n      X\n    </button>\n  );\n\n  return (\n    <form action=\"\">\n      <fieldset>\n        <legend>Filtrar por nome</legend>\n        <input\n          type=\"text\"\n          name=\"\"\n          id=\"\"\n          data-testid=\"name-filter\"\n          onChange={ (event) => {\n            changeNameToBeFiltered(event);\n            filterPlanetsByName(event);\n          } }\n        />\n      </fieldset>\n      <fieldset>\n        <legend>Filtrar por valores</legend>\n        <select\n          name=\"column\"\n          id=\"\"\n          data-testid=\"column-filter\"\n          onChange={ changeNumericInfoToBeFiltered }\n          value={ filters.column }\n        >\n          <option value=\"population\">population</option>\n          <option value=\"orbital_period\">orbital_period</option>\n          <option value=\"diameter\">diameter</option>\n          <option value=\"rotation_period\">rotation_period</option>\n          <option value=\"surface_water\">surface_water</option>\n        </select>\n        {clearFiltersButton}\n        <select\n          name=\"comparison\"\n          id=\"\"\n          data-testid=\"comparison-filter\"\n          onChange={ changeNumericInfoToBeFiltered }\n          value={ filters.comparison }\n        >\n          <option value=\"maior que\">maior que</option>\n          <option value=\"menor que\">menor que</option>\n          <option value=\"igual a\">igual a</option>\n        </select>\n        {clearFiltersButton}\n        <input\n          type=\"number\"\n          name=\"number\"\n          data-testid=\"value-filter\"\n          onChange={ changeNumericInfoToBeFiltered }\n          value={ filters.number }\n        />\n        {clearFiltersButton}\n        <button\n          type=\"button\"\n          data-testid=\"button-filter\"\n          onClick={ handleButtonFilterClick }\n        >\n          Filtrar\n        </button>\n      </fieldset>\n    </form>\n  );\n}\n\nexport default Inputs;\n","import React, { useContext } from 'react';\nimport StarWarsContext from '../contexts/StarWarsContext';\n\nfunction Table() {\n  const { filteredPlanets } = useContext(StarWarsContext);\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Rotation Period</th>\n          <th>Orbital Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n          <th>Films</th>\n          <th>Created</th>\n          <th>Edited</th>\n          <th>Url</th>\n        </tr>\n      </thead>\n      <tbody>\n        {filteredPlanets.map((planet) => (\n          <tr key={ planet.name }>\n            <td>{ planet.name }</td>\n            <td>{ planet.rotation_period }</td>\n            <td>{ planet.orbital_period }</td>\n            <td>{ planet.diameter }</td>\n            <td>{ planet.climate }</td>\n            <td>{ planet.gravity }</td>\n            <td>{ planet.terrain }</td>\n            <td>{ planet.surface_water }</td>\n            <td>{ planet.population }</td>\n            <td>{ planet.films }</td>\n            <td>{ planet.created }</td>\n            <td>{ planet.edited }</td>\n            <td>{ planet.url }</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n","import React from 'react';\nimport './App.css';\n\nimport Provider from './contexts/Provider';\nimport Inputs from './components/Inputs';\nimport Table from './components/Table';\n\nfunction App() {\n  return (\n    <Provider>\n      <Inputs />\n      <Table />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}